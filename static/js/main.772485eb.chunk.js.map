{"version":3,"sources":["components/Chat/Message.module.css","components/Chat/Header.module.css","components/Login/Login.module.css","components/Login/User.module.css","components/Chat/MessageList.module.css","components/Login/Target.module.css","components/Chat/ChatForm.module.css","components/Chat/Chat.module.css","redux store/login-reducer.js","redux store/chat-reducer.js","context store/peer-context.js","redux store/index.js","components/Login/Username.js","components/Login/Interval.js","components/Login/User.js","components/Login/TargetUsername.js","components/Login/Target.js","assets/chatter-logo__portrait.svg","components/Login/Login.js","assets/chatter-logo__landscape.svg","components/Chat/Header.js","components/Chat/Message.js","components/Chat/MessageList.js","components/Chat/ChatForm.js","components/Chat/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","loginSlice","createSlice","name","initialState","userName","userTimer","userStatus","targetName","targetStatus","reducers","setUserTimer","state","action","payload","setUserName","setUserStatus","console","log","setTargetUsername","setTargetStatus","loginActions","actions","chatSlice","chatDuration","messages","addMessage","push","id","length","user","interval","message","removeMessage","filter","item","resetMessages","updateChatDuration","chatActions","PeerContext","createContext","userConnection","targetConnection","connectUser","reconnectUser","disconnectUser","connectTarget","disconnectTarget","PeerProvider","props","useState","userConn","setUserConn","targetConn","setTargetConn","connections","setConnection","dispatch","useDispatch","useSelector","login","useEffect","on","conn","prevConnections","err","type","data","Provider","value","Peer","username","reconnect","destroy","target","connIndex","findIndex","peer","connect","close","sendMessage","send","children","store","configureStore","reducer","loginReducer","chat","chatReducer","Username","Form","Group","className","controlId","FloatingLabel","label","Control","placeholder","onChange","usernameHandler","Feedback","error","Interval","Select","intervalHandler","User","setUsername","setInterval","btnState","setBtnState","usernameError","setUsernameError","useContext","onSubmit","event","preventDefault","classes","login__form","Button","variant","TargetUsername","targetUsernameHandler","Target","targetUsername","targetError","setTargetError","connect__btn","Login","src","ChatterLogo","alt","login__logo","Card","Header","header","header__logo","header__btn","onClick","Message","duration","setDuration","percentage","setPercentage","timer","setTimeout","clearTimeout","message__text","ProgressBar","now","message__timer","MessageList","messages__container","messages__feed","map","msg","ChatForm","setMessage","chatForm","as","Chat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.772485eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__33FPt\",\"user__message\":\"Message_user__message__TOOZ_\",\"target__message\":\"Message_target__message__kFY1V\",\"user__icon\":\"Message_user__icon__1qV-5\",\"target__icon\":\"Message_target__icon__3IfaY\",\"message__text\":\"Message_message__text__3dJN9\",\"message__timer\":\"Message_message__timer__2JdJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10Yca\",\"header__logo\":\"Header_header__logo__1i0Rm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__logo\":\"Login_login__logo__11GJT\",\"login__form\":\"Login_login__form__1rcUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__form\":\"User_login__form__Pr11S\",\"login__btn\":\"User_login__btn__3KX5D\",\"logout__btn\":\"User_logout__btn__2wdew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__container\":\"MessageList_messages__container__15i2T\",\"messages__feed\":\"MessageList_messages__feed__3qv31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"connect__btn\":\"Target_connect__btn__3RT8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatForm\":\"ChatForm_chatForm__3xNu0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__1MKgb\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginStatus = {\r\n  userName: \"\",\r\n  userTimer: 0,\r\n  userStatus: \"\", //close\r\n  targetName: \"\",\r\n  targetStatus: \"\",\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState: loginStatus,\r\n  reducers: {\r\n    setUserTimer(state, action) {\r\n      state.userTimer = action.payload;\r\n    },\r\n    setUserName(state, action) {\r\n      state.userName = action.payload;\r\n    },\r\n    setUserStatus(state, action) {\r\n      state.userStatus = action.payload;\r\n      console.log(\"User Status: \" + action.payload);\r\n    },\r\n    setTargetUsername(state, action) {\r\n      state.targetName = action.payload;\r\n    },\r\n    setTargetStatus(state, action) {\r\n      state.targetStatus = action.payload;\r\n      console.log(\"Target Status: \" + action.payload);\r\n      console.log(\"Target Name: \" + state.targetName);\r\n      console.log(\"User Interval: \" + state.userTimer);\r\n    },\r\n  },\r\n});\r\n\r\nexport const loginActions = loginSlice.actions;\r\nexport default loginSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// {\r\n//   id: 1,\r\n//   user: \"user\",\r\n//   interval: 5,\r\n//   message:\r\n//     \"lorem itpsum whas a loveely day inside the country cabin. we didnt know how to cook all the apples we found.\",\r\n// }\r\n\r\nconst chatStatus = {\r\n  chatDuration: 0,\r\n  messages: [],\r\n};\r\n\r\nconst chatSlice = createSlice({\r\n  name: \"chat\",\r\n  initialState: chatStatus,\r\n  reducers: {\r\n    addMessage(state, action) {\r\n      //Add message to the array\r\n      state.messages.push({\r\n        id: state.messages.length++,\r\n        user: action.payload.user,\r\n        interval: action.payload.interval,\r\n        message: action.payload.message,\r\n      });\r\n    },\r\n    removeMessage(state, action) {\r\n      //Remove message from the array\r\n      state.messages = state.messages.filter(\r\n        (item) => item.id !== action.payload\r\n      );\r\n    },\r\n    resetMessages(state) {\r\n      state.messages = [];\r\n      state.chatDuration = 0;\r\n    },\r\n    updateChatDuration(state, action) {\r\n      state.chatDuration = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const chatActions = chatSlice.actions;\r\nexport default chatSlice.reducer;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginActions } from \"../redux store/login-reducer\";\r\nimport { chatActions } from \"../redux store/chat-reducer\";\r\nimport Peer from \"peerjs\";\r\n\r\nconst PeerContext = createContext({\r\n  userConnection: null,\r\n  targetConnection: null,\r\n  connectUser: () => {},\r\n  reconnectUser: () => {},\r\n  disconnectUser: () => {},\r\n  connectTarget: () => {},\r\n  disconnectTarget: () => {},\r\n});\r\n\r\nexport const PeerProvider = function (props) {\r\n  const [userConn, setUserConn] = useState(null);\r\n  const [targetConn, setTargetConn] = useState(null);\r\n  const [connections, setConnection] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.login.userName);\r\n  const interval = useSelector((state) => state.login.userTimer);\r\n\r\n  const connectUserHandler = (user) => {\r\n    setUserConn(new Peer(user.username));\r\n\r\n    dispatch(loginActions.setUserName(user.username));\r\n    dispatch(loginActions.setUserTimer(user.interval));\r\n  };\r\n  const reconnectUserHander = () => {\r\n    userConn.reconnect();\r\n  };\r\n  const disconnectUserHandler = () => {\r\n    userConn.destroy();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userConn === null) return;\r\n    userConn.on(\"open\", function (id) {\r\n      dispatch(loginActions.setUserStatus(\"open\"));\r\n    });\r\n\r\n    userConn.on(\"connection\", function (conn) {\r\n      setConnection((prevConnections) => [...prevConnections, conn]);\r\n    });\r\n\r\n    userConn.on(\"close\", function () {\r\n      dispatch(loginActions.setUserStatus(\"close\"));\r\n    });\r\n\r\n    userConn.on(\"disconnected\", function () {\r\n      dispatch(loginActions.setUserStatus(\"disconnected\"));\r\n    });\r\n\r\n    userConn.on(\"error\", function (err) {\r\n      switch (err.type) {\r\n        case \"browser-incompatible\":\r\n          dispatch(\r\n            loginActions.setUserStatus(\r\n              \"Not compatible with browser. Please try google chrome.\"\r\n            )\r\n          );\r\n          break;\r\n        case \"disconnected\":\r\n          dispatch(loginActions.setTargetStatus(\"Target has ended the chat.\"));\r\n          break;\r\n        case \"invalid-id\":\r\n        case \"invalid-key\":\r\n        case \"peer-unavailable\":\r\n          dispatch(loginActions.setTargetStatus(\"Target not available.\"));\r\n          break;\r\n        case \"unavailable-id\":\r\n          dispatch(\r\n            loginActions.setUserStatus(\"That username is taken.Try another.\")\r\n          );\r\n          break;\r\n        case \"network\":\r\n        case \"server-error\":\r\n        case \"socket-error\":\r\n        case \"socket-closed\":\r\n        case \"webrtc\":\r\n          dispatch(\r\n            loginActions.setUserStatus(\r\n              \"There was an error with the connection. Please try again later.\"\r\n            )\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }, [userConn, dispatch]);\r\n\r\n  const connectTargetHandler = (target) => {\r\n    dispatch(loginActions.setTargetUsername(target));\r\n    let connIndex = connections.findIndex((conn) => conn.peer === target);\r\n    if (connIndex !== -1) {\r\n      setTargetConn(connections[connIndex]);\r\n      dispatch(loginActions.setTargetStatus(\"connection\"));\r\n    } else {\r\n      setTargetConn(userConn.connect(target));\r\n    }\r\n  };\r\n  const disconnectTargetHandler = () => {\r\n    targetConn.close();\r\n    setConnection([]);\r\n    dispatch(chatActions.resetMessages());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (targetConn === null) return;\r\n    targetConn.on(\"data\", function (data) {\r\n      console.log(\"Message Recieved\");\r\n      dispatch(chatActions.addMessage(data));\r\n    });\r\n\r\n    targetConn.on(\"open\", function () {\r\n      dispatch(loginActions.setTargetStatus(\"connection\"));\r\n    });\r\n\r\n    targetConn.on(\"close\", function () {\r\n      dispatch(\r\n        loginActions.setTargetStatus(\r\n          `Disconnected from target. please try reconnect.`\r\n        )\r\n      );\r\n      setConnection([]);\r\n      dispatch(chatActions.resetMessages());\r\n    });\r\n\r\n    targetConn.on(\"error\", function (err) {\r\n      dispatch(loginActions.setTargetStatus(\"error\"));\r\n    });\r\n  }, [targetConn, dispatch]);\r\n\r\n  const sendMessageHandler = function (message) {\r\n    targetConn.send({\r\n      user,\r\n      interval,\r\n      message,\r\n    });\r\n    dispatch(chatActions.addMessage({ user, message, interval }));\r\n    console.log(\"Message Sent: \" + message);\r\n  };\r\n\r\n  return (\r\n    <PeerContext.Provider\r\n      value={{\r\n        userConnection: userConn,\r\n        targetConnection: targetConn,\r\n        connectUser: connectUserHandler,\r\n        reconnectUser: reconnectUserHander,\r\n        disconnectUser: disconnectUserHandler,\r\n        connectTarget: connectTargetHandler,\r\n        disconnectTarget: disconnectTargetHandler,\r\n        sendMessage: sendMessageHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PeerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PeerContext;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport loginReducer from \"./login-reducer\";\r\nimport chatReducer from \"./chat-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    login: loginReducer,\r\n    chat: chatReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst Username = function (props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId=\"formUsername\">\r\n      <FloatingLabel controlId=\"floatingUsername\" label=\"Username\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={props.value}\r\n          placeholder=\"Enter username\"\r\n          onChange={props.usernameHandler}\r\n        />\r\n      </FloatingLabel>\r\n      <Form.Control.Feedback type={props.error}>\r\n        {props.error}\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default Username;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst Interval = function (props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId=\"formTimeout\">\r\n      <FloatingLabel controlId=\"floatingSelect\" label=\"Timer\">\r\n        <Form.Select value={props.value} onChange={props.intervalHandler}>\r\n          <option value=\"5\">5 seconds</option>\r\n          <option value=\"10\">10 seconds</option>\r\n          <option value=\"15\">15 seconds</option>\r\n        </Form.Select>\r\n      </FloatingLabel>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default Interval;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Username from \"./Username\";\r\nimport Interval from \"./Interval\";\r\nimport classes from \"./User.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\n\r\nconst User = function () {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [interval, setInterval] = useState(\"\");\r\n  const [btnState, setBtnState] = useState(\"login\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n\r\n  const userName = useSelector((state) => state.login.userName);\r\n  const userStatus = useSelector((state) => state.login.userStatus);\r\n  const userTimer = useSelector((state) => state.login.userTimer);\r\n\r\n  const peer = useContext(PeerContext);\r\n\r\n  useEffect(() => {\r\n    if (userName !== \"\") {\r\n      setUsername(userName);\r\n    }\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    if (userTimer !== \"\") {\r\n      setInterval(userTimer);\r\n    }\r\n  }, [userTimer]);\r\n\r\n  useEffect(() => {\r\n    if (userStatus === \"open\") {\r\n      setUsernameError(\"connected\");\r\n    } else {\r\n      setUsernameError(userStatus);\r\n    }\r\n  }, [userStatus]);\r\n\r\n  useEffect(() => {\r\n    switch (userStatus) {\r\n      case \"\":\r\n      case \"close\":\r\n      case \"error\":\r\n        setBtnState(\"login\");\r\n        break;\r\n      case \"open\":\r\n      case \"connection\":\r\n        setBtnState(\"logout\");\r\n        break;\r\n      case \"disconnected\":\r\n        setBtnState(\"reconnect\");\r\n        break;\r\n      default:\r\n    }\r\n  }, [userStatus]);\r\n\r\n  const usernameHandler = function (event) {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const intervalHandler = function (event) {\r\n    setInterval(event.target.value);\r\n  };\r\n\r\n  const submitHandler = function (event) {\r\n    event.preventDefault();\r\n\r\n    if (username === \"\") {\r\n      setUsernameError(\"Please enter username\");\r\n      return;\r\n    }\r\n\r\n    if (btnState === \"login\") {\r\n      peer.connectUser({ username, interval });\r\n    } else if (btnState === \"logout\") {\r\n      peer.disconnectUser();\r\n    } else if (btnState === \"reconnect\") {\r\n      peer.reconnectUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className={classes.login__form}>\r\n      <Username\r\n        value={username}\r\n        error={usernameError}\r\n        usernameHandler={usernameHandler}\r\n      />\r\n      <Interval value={interval} intervalHandler={intervalHandler} />\r\n      <Button\r\n        className={classes[`${btnState}__btn`]}\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n      >\r\n        {btnState}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst TargetUsername = function (props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId=\"formTarget\">\r\n      <FloatingLabel controlId=\"floatingTarget\" label=\"Target\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"target\"\r\n          value={props.value}\r\n          placeholder=\"Target username\"\r\n          onChange={props.targetUsernameHandler}\r\n        />\r\n      </FloatingLabel>\r\n      <Form.Control.Feedback type={props.error}>\r\n        {props.error}\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default TargetUsername;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport TargetUsername from \"./TargetUsername\";\r\nimport classes from \"./Target.module.css\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Target = function () {\r\n  const [targetUsername, setTargetUsername] = useState(\"\");\r\n  const [targetError, setTargetError] = useState(\"\");\r\n\r\n  const targetName = useSelector((state) => state.login.targetName);\r\n  const targetStatus = useSelector((state) => state.login.targetStatus);\r\n\r\n  useEffect(() => {\r\n    if (targetStatus !== \"\") {\r\n      setTargetError(targetStatus);\r\n    }\r\n  }, [targetStatus]);\r\n\r\n  useEffect(() => {\r\n    if (targetName !== \"\") {\r\n      setTargetUsername(targetName);\r\n    }\r\n  }, [targetName]);\r\n\r\n  const peer = useContext(PeerContext);\r\n\r\n  const targetUsernameHandler = function (event) {\r\n    setTargetUsername(event.target.value);\r\n  };\r\n\r\n  const submitHandler = function (event) {\r\n    event.preventDefault();\r\n    peer.connectTarget(targetUsername);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <TargetUsername\r\n        value={targetUsername}\r\n        error={targetError}\r\n        targetUsernameHandler={targetUsernameHandler}\r\n      />\r\n      <Button\r\n        className={classes.connect__btn}\r\n        variant=\"secondary\"\r\n        type=\"submit\"\r\n      >\r\n        Connect\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Target;\r\n","export default __webpack_public_path__ + \"static/media/chatter-logo__portrait.8d7d751e.svg\";","import { Fragment } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport classes from \"./Login.module.css\";\r\nimport User from \"./User\";\r\nimport Target from \"./Target\";\r\nimport ChatterLogo from \"../../assets/chatter-logo__portrait.svg\";\r\n\r\nconst Login = function () {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={ChatterLogo}\r\n        alt=\"Chatter Logo\"\r\n        className={classes.login__logo}\r\n      />\r\n      <Card className={classes.login__form}>\r\n        <User />\r\n        <Target />\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/chatter-logo__landscape.5b227376.svg\";","import Button from \"react-bootstrap/Button\";\r\nimport classes from \"./Header.module.css\";\r\nimport { useContext } from \"react\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\nimport Interval from \"../Login/Interval\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginActions } from \"../../redux store/login-reducer\";\r\nimport ChatterLogo from \"../../assets/chatter-logo__landscape.svg\";\r\n\r\nconst Header = function () {\r\n  const peer = useContext(PeerContext);\r\n  const dispatch = useDispatch();\r\n  const interval = useSelector((state) => state.login.userTimer);\r\n\r\n  const intervalHandler = function (event) {\r\n    dispatch(loginActions.setUserTimer(event.target.value));\r\n  };\r\n\r\n  const disconnectHandler = function () {\r\n    peer.disconnectTarget();\r\n  };\r\n  return (\r\n    <div className={classes.header}>\r\n      <img\r\n        src={ChatterLogo}\r\n        alt=\"Chatter Logo\"\r\n        className={classes.header__logo}\r\n      />\r\n      <Interval value={interval} intervalHandler={intervalHandler} />\r\n      <Button\r\n        className={classes.header__btn}\r\n        variant=\"primary\"\r\n        type=\"button\"\r\n        onClick={disconnectHandler}\r\n      >\r\n        Disconnect\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//import Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport classes from \"./Message.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { chatActions } from \"../../redux store/chat-reducer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BsFillCircleFill } from \"react-icons/bs\";\r\n\r\nconst Message = function ({ id, user, message, interval }) {\r\n  const [duration, setDuration] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n\r\n  const userName = useSelector((state) => state.login.userName);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const type = user === userName ? \"user\" : \"target\";\r\n\r\n  useEffect(() => {\r\n    if (duration < interval) {\r\n      const timer = setTimeout(() => {\r\n        setDuration((state) => state + 0.1);\r\n        setPercentage((duration / interval) * 100);\r\n      }, 100);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    } else {\r\n      dispatch(chatActions.removeMessage(id));\r\n    }\r\n  }, [duration, interval, id, dispatch]);\r\n\r\n  return (\r\n    <div className={classes[`${type}__message`]}>\r\n      <BsFillCircleFill className={classes[`${type}__icon`]} />\r\n      <p className={classes.message__text}>{message}</p>\r\n      <ProgressBar now={percentage} className={classes.message__timer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import Message from \"./Message\";\r\nimport classes from \"./MessageList.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MessageList = function () {\r\n  const messages = useSelector((state) => state.chat.messages);\r\n  return (\r\n    <div className={classes.messages__container}>\r\n      <div className={classes.messages__feed}>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={msg.id}\r\n            id={msg.id}\r\n            user={msg.user}\r\n            message={msg.message}\r\n            interval={msg.interval}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","import { useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport classes from \"./ChatForm.module.css\";\r\nimport { useState } from \"react\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\n\r\nconst ChatForm = function () {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const peer = useContext(PeerContext);\r\n\r\n  const textInputHandler = function (event) {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const submitMessageHandler = function (event) {\r\n    event.preventDefault();\r\n    peer.sendMessage(message);\r\n    setMessage(\"\");\r\n  };\r\n  return (\r\n    <Form onSubmit={submitMessageHandler} className={classes.chatForm}>\r\n      <Form.Control\r\n        onChange={textInputHandler}\r\n        as=\"textarea\"\r\n        value={message}\r\n        placeholder=\"Message...\"\r\n      />\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        Please add text to submit a message\r\n      </Form.Control.Feedback>\r\n      <Button type=\"submit\">Submit</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChatForm;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport Header from \"./Header\";\r\nimport MessageList from \"./MessageList\";\r\nimport ChatForm from \"./ChatForm\";\r\nimport classes from \"./Chat.module.css\";\r\n\r\nconst Chat = function () {\r\n  return (\r\n    <Card className={classes.chat}>\r\n      <Header />\r\n      <MessageList />\r\n      <ChatForm />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./components/Login/Login\";\nimport Chat from \"./components/Chat/Chat\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const targetStatus = useSelector((state) => state.login.targetStatus);\n\n  return (\n    <div className=\"App\">\n      {targetStatus !== \"connection\" ? <Login /> : <Chat />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PeerProvider } from \"./context store/peer-context\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux store/index\";\nimport App from \"./App\";\nimport \"./custom.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PeerProvider>\n        <App />\n      </PeerProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}