{"version":3,"sources":["components/Chat/Message.module.css","components/Chat/Header.module.css","components/Login/User.module.css","components/Chat/MessageList.module.css","components/Login/Login.module.css","components/Login/Target.module.css","components/Chat/ChatForm.module.css","components/Chat/Chat.module.css","redux store/login-reducer.js","redux store/chat-reducer.js","context store/peer-context.js","redux store/index.js","components/Login/Username.js","components/Login/Interval.js","components/Login/User.js","components/Login/TargetUsername.js","components/Login/Target.js","components/Login/Login.js","components/Chat/Header.js","components/Chat/Message.js","components/Chat/MessageList.js","components/Chat/ChatForm.js","components/Chat/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","loginSlice","createSlice","name","initialState","userName","userTimer","userStatus","targetName","targetStatus","reducers","setUserTimer","state","action","payload","setUserName","setUserStatus","console","log","setTargetUsername","setTargetStatus","loginActions","actions","chatSlice","chatDuration","messages","addMessage","push","id","length","user","interval","message","removeMessage","filter","item","updateChatDuration","chatActions","PeerContext","createContext","userConnection","targetConnection","connectUser","reconnectUser","disconnectUser","connectTarget","disconnectTarget","PeerProvider","props","useState","userConn","setUserConn","targetConn","setTargetConn","connections","setConnection","dispatch","useDispatch","useSelector","login","useEffect","on","conn","prevConnections","err","type","data","Provider","value","username","Peer","reconnect","destroy","target","connIndex","findIndex","peer","connect","close","sendMessage","send","children","store","configureStore","reducer","loginReducer","chat","chatReducer","Username","Form","Group","className","controlId","FloatingLabel","label","Control","placeholder","onChange","usernameHandler","Feedback","error","Interval","Select","intervalHandler","User","setUsername","setInterval","btnState","setBtnState","usernameError","setUsernameError","userError","useContext","onSubmit","event","preventDefault","classes","login__form","Button","variant","TargetUsername","targetUsernameHandler","Target","targetUsername","targetError","connect__btn","Login","Card","form","Header","header","header__logo","header__btn","onClick","Message","duration","setDuration","percentage","setPercentage","setTimeout","message__text","ProgressBar","now","message__timer","MessageList","messages__container","messages__feed","map","msg","ChatForm","setMessage","chatForm","as","Chat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28d56c37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__33FPt\",\"user__message\":\"Message_user__message__TOOZ_\",\"target__message\":\"Message_target__message__kFY1V\",\"message__text\":\"Message_message__text__3dJN9\",\"message__timer\":\"Message_message__timer__2JdJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10Yca\",\"header__logo\":\"Header_header__logo__1i0Rm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__form\":\"User_login__form__Pr11S\",\"login__btn\":\"User_login__btn__3KX5D\",\"logout__btn\":\"User_logout__btn__2wdew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__container\":\"MessageList_messages__container__15i2T\",\"messages__feed\":\"MessageList_messages__feed__3qv31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2VD1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"connect__btn\":\"Target_connect__btn__3RT8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatForm\":\"ChatForm_chatForm__3xNu0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__1MKgb\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loginStatus = {\r\n  userName: \"\",\r\n  userTimer: 0,\r\n  userStatus: \"\", //close\r\n  targetName: \"\",\r\n  targetStatus: \"\",\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState: loginStatus,\r\n  reducers: {\r\n    setUserTimer(state, action) {\r\n      state.userTimer = action.payload;\r\n    },\r\n    setUserName(state, action) {\r\n      state.userName = action.payload;\r\n    },\r\n    setUserStatus(state, action) {\r\n      state.userStatus = action.payload;\r\n      console.log(\"User Status: \" + action.payload);\r\n    },\r\n    setTargetUsername(state, action) {\r\n      state.targetName = action.payload;\r\n    },\r\n    setTargetStatus(state, action) {\r\n      state.targetStatus = action.payload;\r\n      console.log(\"Target Status: \" + action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const loginActions = loginSlice.actions;\r\nexport default loginSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// {\r\n//   id: 1,\r\n//   user: \"user\",\r\n//   interval: 5,\r\n//   message:\r\n//     \"lorem itpsum whas a loveely day inside the country cabin. we didnt know how to cook all the apples we found.\",\r\n// }\r\n\r\nconst chatStatus = {\r\n  chatDuration: 0,\r\n  messages: [],\r\n};\r\n\r\nconst chatSlice = createSlice({\r\n  name: \"chat\",\r\n  initialState: chatStatus,\r\n  reducers: {\r\n    addMessage(state, action) {\r\n      //Add message to the array\r\n      state.messages.push({\r\n        id: state.messages.length++,\r\n        user: action.payload.user,\r\n        interval: action.payload.interval,\r\n        message: action.payload.message,\r\n      });\r\n    },\r\n    removeMessage(state, action) {\r\n      //Remove message from the array\r\n      state.messages = state.messages.filter(\r\n        (item) => item.id !== action.payload\r\n      );\r\n    },\r\n    updateChatDuration(state, action) {\r\n      state.chatDuration = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const chatActions = chatSlice.actions;\r\nexport default chatSlice.reducer;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginActions } from \"../redux store/login-reducer\";\r\nimport { chatActions } from \"../redux store/chat-reducer\";\r\nimport Peer from \"peerjs\";\r\n\r\nconst PeerContext = createContext({\r\n  userConnection: null,\r\n  targetConnection: null,\r\n  connectUser: () => {},\r\n  reconnectUser: () => {},\r\n  disconnectUser: () => {},\r\n  connectTarget: () => {},\r\n  disconnectTarget: () => {},\r\n});\r\n\r\nexport const PeerProvider = function (props) {\r\n  const [userConn, setUserConn] = useState(null);\r\n  const [targetConn, setTargetConn] = useState(null);\r\n  const [connections, setConnection] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.login.userName);\r\n  const interval = useSelector((state) => state.login.userTimer);\r\n\r\n  const connectUserHandler = (username, interval) => {\r\n    setUserConn(new Peer(username));\r\n\r\n    dispatch(loginActions.setUserName(username));\r\n    dispatch(loginActions.setUserTimer(interval));\r\n  };\r\n  const reconnectUserHander = () => {\r\n    userConn.reconnect();\r\n  };\r\n  const disconnectUserHandler = () => {\r\n    userConn.destroy();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userConn === null) return;\r\n    userConn.on(\"open\", function (id) {\r\n      dispatch(loginActions.setUserStatus(\"open\"));\r\n    });\r\n\r\n    userConn.on(\"connection\", function (conn) {\r\n      console.log(conn);\r\n      setConnection((prevConnections) => [...prevConnections, conn]);\r\n    });\r\n\r\n    userConn.on(\"close\", function () {\r\n      dispatch(loginActions.setUserStatus(\"close\"));\r\n    });\r\n\r\n    userConn.on(\"disconnected\", function () {\r\n      dispatch(loginActions.setUserStatus(\"disconnected\"));\r\n    });\r\n\r\n    userConn.on(\"error\", function (err) {\r\n      switch (err.type) {\r\n        case \"browser-incompatible\":\r\n          dispatch(loginActions.setUserStatus(\"Not compatible with browser\"));\r\n          break;\r\n        case \"disconnected\":\r\n          dispatch(loginActions.setUserStatus(\"disconnected\"));\r\n          break;\r\n        case \"invalid-id\":\r\n        case \"invalid-key\":\r\n        case \"peer-unavailable\":\r\n          dispatch(loginActions.setTargetStatus(\"Target is unavailable\"));\r\n          break;\r\n        case \"unavailable-id\":\r\n          dispatch(loginActions.setUserStatus(\"Username is already taken\"));\r\n          break;\r\n        case \"network\":\r\n        case \"server-error\":\r\n        case \"socket-error\":\r\n        case \"socket-closed\":\r\n        case \"webrtc\":\r\n          dispatch(loginActions.setUserStatus(\"Something went wrong\"));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }, [userConn, dispatch]);\r\n\r\n  const connectTargetHandler = (target) => {\r\n    loginActions.setTargetUsername(target);\r\n    let connIndex = connections.findIndex((conn) => conn.peer === target);\r\n    console.log(connIndex);\r\n    if (connIndex !== -1) {\r\n      setTargetConn(connections[connIndex]);\r\n      dispatch(loginActions.setTargetStatus(\"connection\"));\r\n    } else {\r\n      setTargetConn(userConn.connect(target));\r\n    }\r\n  };\r\n  const disconnectTargetHandler = () => {\r\n    targetConn.close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (targetConn === null) return;\r\n    targetConn.on(\"data\", function (data) {\r\n      console.log(\"Message Recieved\");\r\n      dispatch(chatActions.addMessage(data));\r\n    });\r\n\r\n    targetConn.on(\"open\", function () {\r\n      dispatch(loginActions.setTargetStatus(\"connection\"));\r\n    });\r\n\r\n    targetConn.on(\"close\", function () {\r\n      dispatch(loginActions.setTargetStatus(\"close\"));\r\n    });\r\n\r\n    targetConn.on(\"error\", function (err) {\r\n      dispatch(loginActions.setTargetStatus(\"error\"));\r\n    });\r\n  }, [targetConn, dispatch]);\r\n\r\n  const sendMessageHandler = function (message) {\r\n    targetConn.send({\r\n      user,\r\n      interval,\r\n      message,\r\n    });\r\n    dispatch(chatActions.addMessage({ message, interval }));\r\n    console.log(\"Message Sent: \" + message);\r\n  };\r\n\r\n  return (\r\n    <PeerContext.Provider\r\n      value={{\r\n        userConnection: userConn,\r\n        targetConnection: targetConn,\r\n        connectUser: connectUserHandler,\r\n        reconnectUser: reconnectUserHander,\r\n        disconnectUser: disconnectUserHandler,\r\n        connectTarget: connectTargetHandler,\r\n        disconnectTarget: disconnectTargetHandler,\r\n        sendMessage: sendMessageHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PeerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PeerContext;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport loginReducer from \"./login-reducer\";\r\nimport chatReducer from \"./chat-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    login: loginReducer,\r\n    chat: chatReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst Username = function (props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId=\"formUsername\">\r\n      <FloatingLabel controlId=\"floatingUsername\" label=\"Username\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={props.value}\r\n          placeholder=\"Enter username\"\r\n          onChange={props.usernameHandler}\r\n        />\r\n      </FloatingLabel>\r\n      <Form.Control.Feedback type={props.error}>\r\n        {props.error}\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default Username;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst Interval = function (props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId=\"formTimeout\">\r\n      <FloatingLabel controlId=\"floatingSelect\" label=\"Timer\">\r\n        <Form.Select onChange={props.intervalHandler}>\r\n          <option value=\"5\">5 seconds</option>\r\n          <option value=\"10\">10 seconds</option>\r\n          <option value=\"15\">15 seconds</option>\r\n        </Form.Select>\r\n      </FloatingLabel>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default Interval;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Username from \"./Username\";\r\nimport Interval from \"./Interval\";\r\nimport classes from \"./User.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\n\r\nconst User = function () {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [interval, setInterval] = useState(\"\");\r\n  const [btnState, setBtnState] = useState(\"login\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n\r\n  const userName = useSelector((state) => state.login.userName);\r\n  const userStatus = useSelector((state) => state.login.userStatus);\r\n  const userError = useSelector((state) => state.login.userError);\r\n\r\n  const peer = useContext(PeerContext);\r\n\r\n  useEffect(() => {\r\n    setUsernameError(userError);\r\n  }, [userError]);\r\n\r\n  useEffect(() => {\r\n    if (userName !== \"\") {\r\n      setUsername(userName);\r\n    }\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    switch (userStatus) {\r\n      case \"\":\r\n      case \"close\":\r\n      case \"error\":\r\n        setBtnState(\"login\");\r\n        break;\r\n      case \"open\":\r\n      case \"connection\":\r\n        setBtnState(\"logout\");\r\n        break;\r\n      case \"disconnected\":\r\n        setBtnState(\"reconnect\");\r\n        break;\r\n      default:\r\n    }\r\n  }, [userStatus]);\r\n\r\n  const usernameHandler = function (event) {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const intervalHandler = function (event) {\r\n    setInterval(event.target.value);\r\n  };\r\n\r\n  const submitHandler = function (event) {\r\n    event.preventDefault();\r\n\r\n    if (username === \"\") {\r\n      setUsernameError(\"Please enter username\");\r\n      return;\r\n    }\r\n\r\n    if (btnState === \"login\") {\r\n      peer.connectUser(username, interval);\r\n    } else if (btnState === \"logout\") {\r\n      peer.disconnectUser();\r\n    } else if (btnState === \"reconnect\") {\r\n      peer.reconnectUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className={classes.login__form}>\r\n      <Username\r\n        value={username}\r\n        error={usernameError}\r\n        usernameHandler={usernameHandler}\r\n      />\r\n      <Interval intervalHandler={intervalHandler} />\r\n      <Button\r\n        className={classes[`${btnState}__btn`]}\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n      >\r\n        {btnState}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\n\r\nconst TargetUsername = function (props) {\r\n  return (\r\n    <Form.Group className=\"mb-3\" controlId=\"formTarget\">\r\n      <FloatingLabel controlId=\"floatingTarget\" label=\"Target\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Target username\"\r\n          value={props.value}\r\n          onChange={props.targetUsernameHandler}\r\n        />\r\n      </FloatingLabel>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default TargetUsername;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport TargetUsername from \"./TargetUsername\";\r\nimport classes from \"./Target.module.css\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Target = function () {\r\n  const [targetUsername, setTargetUsername] = useState(\"\");\r\n\r\n  const targetName = useSelector((state) => state.login.targetName);\r\n  const targetError = useSelector((state) => state.login.targetError);\r\n\r\n  useEffect(() => {\r\n    setTargetUsername(targetName);\r\n  }, [targetName]);\r\n\r\n  const peer = useContext(PeerContext);\r\n\r\n  const targetUsernameHandler = function (event) {\r\n    setTargetUsername(event.target.value);\r\n  };\r\n\r\n  const submitHandler = function (event) {\r\n    event.preventDefault();\r\n    peer.connectTarget(targetUsername);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <TargetUsername\r\n        value={targetUsername}\r\n        error={targetError}\r\n        targetUsernameHandler={targetUsernameHandler}\r\n      />\r\n      <Button\r\n        className={classes.connect__btn}\r\n        variant=\"secondary\"\r\n        type=\"submit\"\r\n      >\r\n        Connect\r\n      </Button>\r\n      <Form.Control.Feedback type={targetError}>\r\n        {targetError}\r\n      </Form.Control.Feedback>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Target;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport classes from \"./Login.module.css\";\r\nimport User from \"./User\";\r\nimport Target from \"./Target\";\r\n\r\nconst Login = function () {\r\n  return (\r\n    <Card className={classes.form}>\r\n      <User />\r\n      <Target />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport classes from \"./Header.module.css\";\r\nimport { useContext } from \"react\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\nimport Interval from \"../Login/Interval\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginActions } from \"../../redux store/login-reducer\";\r\n\r\nconst Header = function () {\r\n  const peer = useContext(PeerContext);\r\n  const dispatch = useDispatch();\r\n  const interval = useSelector((state) => state.login.userTimer);\r\n\r\n  const intervalHandler = function (event) {\r\n    dispatch(loginActions.setUserTimer(event.target.value));\r\n  };\r\n\r\n  const disconnectHandler = function () {\r\n    peer.disconnectTarget();\r\n  };\r\n  return (\r\n    <div className={classes.header}>\r\n      <div className={classes.header__logo}>Logo</div>\r\n      <Interval value={interval} intervalHandler={intervalHandler} />\r\n      <Button\r\n        className={classes.header__btn}\r\n        variant=\"primary\"\r\n        type=\"button\"\r\n        onClick={disconnectHandler}\r\n      >\r\n        Disconnect\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport classes from \"./Message.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { chatActions } from \"../../redux store/chat-reducer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BsFillCircleFill } from \"react-icons/bs\";\r\n\r\nconst Message = function ({ id, user, message, interval }) {\r\n  const [duration, setDuration] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n\r\n  const userName = useSelector((state) => state.login.userName);\r\n  const dispatch = useDispatch();\r\n\r\n  const type = user === userName ? \"user\" : \"target\";\r\n\r\n  useEffect(() => {\r\n    if (duration < interval) {\r\n      setTimeout(() => {\r\n        setDuration((state) => state + 0.1);\r\n        setPercentage((duration / interval) * 100);\r\n      }, 100);\r\n    } else {\r\n      dispatch(chatActions.removeMessage(id));\r\n    }\r\n  }, [duration, interval, id, dispatch]);\r\n\r\n  return (\r\n    <Card className={classes.message}>\r\n      <BsFillCircleFill className={classes[`${type}__mesage`]} />\r\n      <p className={classes.message__text}>{message}</p>\r\n      <ProgressBar now={percentage} className={classes.message__timer} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import Message from \"./Message\";\r\nimport classes from \"./MessageList.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MessageList = function () {\r\n  const messages = useSelector((state) => state.chat.messages);\r\n  return (\r\n    <div className={classes.messages__container}>\r\n      <div className={classes.messages__feed}>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={msg.id}\r\n            id={msg.id}\r\n            user={msg.user}\r\n            message={msg.message}\r\n            interval={msg.interval}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","import { useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport classes from \"./ChatForm.module.css\";\r\nimport { useState } from \"react\";\r\nimport PeerContext from \"../../context store/peer-context\";\r\n\r\nconst ChatForm = function () {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const peer = useContext(PeerContext);\r\n\r\n  const textInputHandler = function (event) {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const submitMessageHandler = function (event) {\r\n    event.preventDefault();\r\n    peer.sendMessage(message);\r\n    setMessage(\"\");\r\n  };\r\n  return (\r\n    <Form onSubmit={submitMessageHandler} className={classes.chatForm}>\r\n      <Form.Control\r\n        onChange={textInputHandler}\r\n        as=\"textarea\"\r\n        value={message}\r\n        placeholder=\"Message...\"\r\n      />\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        Please add text to submit a message\r\n      </Form.Control.Feedback>\r\n      <Button type=\"submit\">Submit</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChatForm;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport Header from \"./Header\";\r\nimport MessageList from \"./MessageList\";\r\nimport ChatForm from \"./ChatForm\";\r\nimport classes from \"./Chat.module.css\";\r\n\r\nconst Chat = function () {\r\n  return (\r\n    <Card className={classes.chat}>\r\n      <Header />\r\n      <MessageList />\r\n      <ChatForm />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./components/Login/Login\";\nimport Chat from \"./components/Chat/Chat\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const targetStatus = useSelector((state) => state.login.targetStatus);\n\n  return (\n    <div className=\"App\">\n      {targetStatus !== \"connection\" ? <Login /> : <Chat />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PeerProvider } from \"./context store/peer-context\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux store/index\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"./custom.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PeerProvider>\n        <App />\n      </PeerProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}